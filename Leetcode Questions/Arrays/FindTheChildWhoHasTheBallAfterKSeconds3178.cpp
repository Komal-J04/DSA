class Solution
{
public:
    int numberOfChild(int n, int k)
    {
        int i = 0;
        while (k > 0)
        {
            while ((i < (n - 1)) && (k > 0))
            {
                i++;
                k--;
                cout << "1 " << i << " " << k << endl;
            }

            while ((i > 0) && (k > 0))
            {
                i--;
                k--;
                cout << "2 " << i << " " << k << endl;
            }
        }
        return i;
    }
};

// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************

// APPROACH 2 - cyclic nature of ball passing

class Solution
{
public:
    int numberOfChild(int n, int k)
    {
        int x = k / (n - 1);
        if (x % 2 == 1)
            return n - 1 - (k % (n - 1));

        return k % (n - 1);
    }
};