// https://leetcode.com/problems/pass-the-pillow/description/?envType=daily-question&envId=2024-07-06

// APPROACH 1 - naive approach
class Solution
{
public:
    int passThePillow(int n, int time)
    {
        int i = 1;
        bool leftToRight = true;
        while (time > 0)
        {
            if (leftToRight)
                i++;
            else
                i--;

            if (i == n)
                leftToRight = false;
            if (i == 1)
                leftToRight = true;
            time--;
        }
        return i;
    }
};

// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************

// APPROACH 2
class Solution
{
public:
    int passThePillow(int n, int time)
    {
        int x = time / (n - 1);
        if (x % 2 == 1)
            return n - (time % (n - 1));
        return (time % (n - 1)) + 1;
    }
};