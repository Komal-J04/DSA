// https://leetcode.com/problems/n-th-tribonacci-number/submissions/1240979412/?envType=daily-question&envId=2024-04-24

// APPROACH 1 - TLE
class Solution
{
public:
    int tribonacci(int n)
    {
        if (n == 0)
            return 0;
        if (n == 1 || n == 2)
            return 1;

        return tribonacci(n - 1) + tribonacci(n - 2) + tribonacci(n - 3);
    }
};

// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************

// APPROACH 2 - All test cases pass

class Solution
{
public:
    int tribonacci(int n)
    {
        if (n == 0)
            return 0;

        int a0 = 0, a1 = 1, a2 = 1;

        for (int i = 0; i < n - 2; i++)
        {
            int newa0 = a0 + a1 + a2;
            a0 = a1;
            a1 = a2;
            a2 = newa0;
        }

        return a2;
    }
};