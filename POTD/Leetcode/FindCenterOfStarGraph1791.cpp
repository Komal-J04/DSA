// APPROACH 1

class Solution
{
public:
    int findCenter(vector<vector<int>> &edges)
    {
        set<int> s;
        s.insert(edges[0][0]);
        s.insert(edges[0][1]);

        for (int i = 1; i < edges.size(); i++)
        {
            for (int j = 0; j < edges[i].size(); j++)
            {
                if (s.find(edges[i][j]) != s.end())
                    return edges[i][j];
            }
        }

        return -1;
    }
};

// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************
// *********************************************************************************

// APPROACH 2

class Solution
{
public:
    int findCenter(vector<vector<int>> &edges)
    {
        return ((edges[0][0] == edges[1][0]) || (edges[0][0] == edges[1][1])) ? edges[0][0] : edges[0][1];
    }
};